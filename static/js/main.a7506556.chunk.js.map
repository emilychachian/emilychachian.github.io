{"version":3,"sources":["assets/logo.svg","components/Header/Header.js","components/UserCard/UserCard.js","utils/dateFormatter.js","components/UserList/UserList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","UserCard","date","user","useState","name","setName","avatar","setAvatar","repos","setRepos","bio","setBio","followers","setFollowers","creationDate","setCreationDate","setUsersInfo","avatar_url","public_repos","created_at","useEffect","a","fetch","then","response","json","usersInfo","Card","Image","wrapped","ui","Content","Meta","Date","toLocaleDateString","Description","extra","Icon","UserList","props","users","selectedUser","setSelectedUser","word","setWord","filterDisplay","setFilterDisplay","showCard","setShowCard","handleEsc","event","keyCode","window","addEventListener","removeEventListener","Input","placeholder","onChange","e","newList","oldList","map","filter","login","toLowerCase","includes","handleChange","target","value","List","animated","verticalAlign","Item","onClick","App","setUsers","res","data","getUsers","Fragment","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7506556.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d7726229.svg\";","import logo from '../../assets/logo.svg'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"container\">\r\n        <div className=\"header-wrapper\">\r\n          <h1>Github Search</h1>\r\n          <img src={logo} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\nimport dateFormatter from '../../utils/dateFormatter'\r\n\r\nfunction UserCard({ user }) {\r\n  const [name, setName] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n  const [repos, setRepos] = useState('')\r\n  const [bio, setBio] = useState('')\r\n  const [followers, setFollowers] = useState('')\r\n  const [creationDate, setCreationDate] = useState('')\r\n\r\n  const setUsersInfo = ({ name, avatar_url, bio, public_repos, followers, created_at }) => {\r\n    setName(name)\r\n    setAvatar(avatar_url)\r\n    setRepos(public_repos)\r\n    setFollowers(followers)\r\n    setCreationDate(created_at)\r\n    setBio(bio)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    await fetch(`https://api.github.com/users/${user}`)\r\n      .then((response) => response.json())\r\n      .then((usersInfo) => {\r\n        setUsersInfo(usersInfo)\r\n      })\r\n  }, [user])\r\n\r\n  return (\r\n    <div className=\"user-card\">\r\n      <Card>\r\n        <div className=\"warning\">Press Esc to close</div>\r\n        <Image src={avatar} wrapped ui={false} />\r\n        <Card.Content>\r\n          <Card.Header>{name}</Card.Header>\r\n          <Card.Meta>\r\n            <span className=\"date\">Joined in {dateFormatter(creationDate)}</span>\r\n          </Card.Meta>\r\n          <Card.Description>{bio}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <a>\r\n            <Icon name=\"user\" />\r\n            {followers} followers\r\n          </a>\r\n          <a>{repos} Repositories</a>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserCard\r\n","export default function dateFormatter(date) {\r\n  let d = new Date(date)\r\n  let formattedDate = d.toLocaleDateString('en-GB')\r\n  return formattedDate\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Image, List, Input } from 'semantic-ui-react'\r\nimport UserCard from '../UserCard/UserCard'\r\n\r\nexport default function UserList(props) {\r\n  const { users } = props\r\n\r\n  const [selectedUser, setSelectedUser] = useState('')\r\n  const [word, setWord] = useState('')\r\n  const [filterDisplay, setFilterDisplay] = useState(props.users)\r\n  const [showCard, setShowCard] = useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    let oldList = users.map((user) => {\r\n      return user\r\n    })\r\n\r\n    if (e !== '') {\r\n      let newList = []\r\n      setWord(e)\r\n      newList = oldList.filter((user) => user.login.toLowerCase().includes(word.toLowerCase()))\r\n      setFilterDisplay(newList)\r\n    } else {\r\n      setFilterDisplay(users)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.keyCode === 27) {\r\n        setShowCard(false)\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleEsc)\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEsc)\r\n    }\r\n  }, [])\r\n\r\n  if (users) {\r\n    return (\r\n      <>\r\n        <div className=\"search-bar\">\r\n          <Input\r\n            placeholder=\"Github user\"\r\n            name=\"github user\"\r\n            onChange={(e) => {\r\n              handleChange(e.target.value)\r\n              setShowCard(false)\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"content-container\">\r\n          <div className=\"list-container\">\r\n            <List animated verticalAlign=\"middle\">\r\n              {filterDisplay.map((user) => (\r\n                <List.Item\r\n                  onClick={() => {\r\n                    setSelectedUser(user.login)\r\n                    setShowCard(true)\r\n                  }}\r\n                >\r\n                  <Image src={user.avatar_url} />\r\n                  <List.Content>\r\n                    <List.Header>{user.login}</List.Header>\r\n                  </List.Content>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </div>\r\n          <div className=\"card-container\">{showCard === true && <UserCard user={selectedUser} />}</div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header/Header'\nimport UserList from './components/UserList/UserList'\nimport styles from './styles/styles.scss'\n\nfunction App() {\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    async function getUsers() {\n      await fetch('https://api.github.com/orgs/grupotesseract/public_members')\n        .then((res) => res.json())\n        .then((data) => {\n          setUsers(data)\n        })\n    }\n\n    getUsers()\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Header />\n      {users && users.length > 0 && <UserList users={users} />}\n    </React.Fragment>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}